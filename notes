3 classes:
CLI - controller - communicates with user
quote - where objects are created and stored for user display
API - bring in external data, instantiate objects 


Drafts:
Cli

# [1..10].each{|quote| puts "\nQuote: ''#{quote.quote.blue}''\n Author: #{quote.author}\n Season: #{quote.season}\n Episode: #{quote.episode}\n"} 
        # Quote.all.select{|quote, author| puts "\nQuote: ''#{quote.quote.blue}''\n Author: #{quote.author}\n Season: #{quote.season}\n Episode: #{quote.episode}\n"}


    # def display_quotes
    #     # Quote.all.filter{|quote| quote.author}.map{|quote| quote.quote}
       
    # def display_authors 
    
    #     # Cli.authors.each_with_index{|authors, index| puts " #{index + 1}. #{authors.capitalize}"}
    #     Quote.all.map{|quote, index| quote.author}.uniq.each_with_index {|name, index| puts "#{index + 1 }. #{name}"}

Quote
    # def self.find_by_name(author)
#     self.all.select do |quote|
#         quote.author == name
#     end
# end    

    # def self.display_quotes
       
    #     self.all.select{|quote, author| puts "\nQuote: ''#{quote.quote.blue}''\n Author: #{quote.author}\n Season: #{quote.season}\n Episode: #{quote.episode}\n"}
    # end

    # def self.retrieve_by_author
    #     self.all.filter{|quote| quote.author}.map{|quote| quote.quote}
    # end


# Quote.all.filter{|quote| quote.author}.map{|quote| quote.quote}

    # def self.quote_author
    #     @@quote_author
    # end

    # def self.sort_data
    #    self.all.map {|quote| quote.author}.uniq
    # end
    
    #  def initialize(quote, author, season, episode)
    #     @quote = quote
    #     @author = author
    #     @season = season
    #     @episode = episode
    #     @@all << self
    # end

     # def initialize(attr_hash)
    #     attr_hash.each do |k, v|
    #      self.send("#{k}=", v) if self.respond_to?("#{k}=")
    #     end
    #      save
    #  end 
 
    #  def save
    #      @@all << self
    #  end 


    #     #select authors with name that is equal to argument
    #     self.all.each{|quote| puts "\nQuote: ''#{quote.quote.blue}''\n Author: #{quote.author}\n Season: #{quote.season}\n Episode: #{quote.episode}\n"} 

    API
     # response = RestClient.get("https://seinfeld-quotes.herokuapp.com/quotes/")
        # quotes_array = JSON.parse(response.body)["quotes"][1..10]
        # quotes_array.each do |quote|
        #     Quote.new(quote)

         # [1..10]
        # quotes_array.each do |quote|
        #     Quote.new(quote["quote"], quote["author"], quote["season"], quote["episode"])

